import os
import numpy as np
import cv2

# Function to convert image back to binary
def image_to_binary(image_file):
    # Read the image in grayscale mode
    image = cv2.imread(image_file, cv2.IMREAD_GRAYSCALE)

    if image is None:
        print(f"Error: Unable to read image file {image_file}")
        return

    # Flatten the 2D image array to 1D
    binary_array = image.flatten()

    # Convert to bytes
    binary_data = binary_array.tobytes()

    # Ensure the "data" directory exists
    output_dir = "data"
    os.makedirs(output_dir, exist_ok=True)

    # Derive the output binary file name from the image file name
    base_name = os.path.basename(image_file)
    output_binary_file = os.path.join(output_dir, os.path.splitext(base_name)[0] + '.bin')
    output_image_file = os.path.join(output_dir, base_name)

    # Write to binary file
    with open(output_binary_file, 'wb') as file:
        file.write(binary_data)
    
    # Save the image in the "data" directory
    cv2.imwrite(output_image_file, image)
    
    # Return the absolute file paths of the binary file and the image file
    return os.path.abspath(output_binary_file), os.path.abspath(output_image_file)
